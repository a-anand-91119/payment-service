/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package dev.notyouraverage.messages.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class OrderCreatedEvent extends org.apache.avro.specific.SpecificRecordBase
        implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = -385204080936493633L;

    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
            "{\"type\":\"record\",\"name\":\"OrderCreatedEvent\",\"namespace\":\"dev.notyouraverage.messages.avro\",\"fields\":[{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier for the order\"},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer who placed the order\"},{\"name\":\"customerEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Customer email address\",\"default\":null},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Order status (CREATED, CONFIRMED, etc.)\"},{\"name\":\"orderDate\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"When the order was created\"},{\"name\":\"totalAmount\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Total order amount as string\"},{\"name\":\"currency\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Currency code (USD, EUR, etc.)\"},{\"name\":\"lineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderLineItem\",\"fields\":[{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Product identifier\"},{\"name\":\"productName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Product name\"},{\"name\":\"productSku\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Product SKU\"},{\"name\":\"quantity\",\"type\":\"int\",\"doc\":\"Quantity ordered\"},{\"name\":\"unitPrice\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unit price as string\"},{\"name\":\"totalPrice\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Total line item price as string\"}]}},\"doc\":\"List of order line items\"},{\"name\":\"shippingAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Shipping address as JSON string\",\"default\":null},{\"name\":\"source\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Order source (WEB, MOBILE_APP, etc.)\"},{\"name\":\"channel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Order channel (ONLINE, IN_STORE, etc.)\",\"default\":null},{\"name\":\"eventTimestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"When this event was created\"},{\"name\":\"eventSource\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Source service that generated this event\",\"default\":\"order-service\"},{\"name\":\"eventVersion\",\"type\":\"int\",\"doc\":\"Event schema version\",\"default\":1}]}"
    );

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();
    static {
        MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    }

    private static final BinaryMessageEncoder<OrderCreatedEvent> ENCODER = new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<OrderCreatedEvent> DECODER = new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     *
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<OrderCreatedEvent> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     *
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<OrderCreatedEvent> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the
     * specified {@link SchemaStore}.
     *
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given
     *         SchemaStore
     */
    public static BinaryMessageDecoder<OrderCreatedEvent> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this OrderCreatedEvent to a ByteBuffer.
     *
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a OrderCreatedEvent from a ByteBuffer.
     *
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a OrderCreatedEvent instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into
     *                             an instance of this class
     */
    public static OrderCreatedEvent fromByteBuffer(
            java.nio.ByteBuffer b
    ) throws java.io.IOException {
        return DECODER.decode(b);
    }

    /** Unique identifier for the order */
    private java.lang.String orderId;

    /** Customer who placed the order */
    private java.lang.String customerId;

    /** Customer email address */
    private java.lang.String customerEmail;

    /** Order status (CREATED, CONFIRMED, etc.) */
    private java.lang.String status;

    /** When the order was created */
    private java.time.Instant orderDate;

    /** Total order amount as string */
    private java.lang.String totalAmount;

    /** Currency code (USD, EUR, etc.) */
    private java.lang.String currency;

    /** List of order line items */
    private java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> lineItems;

    /** Shipping address as JSON string */
    private java.lang.String shippingAddress;

    /** Order source (WEB, MOBILE_APP, etc.) */
    private java.lang.String source;

    /** Order channel (ONLINE, IN_STORE, etc.) */
    private java.lang.String channel;

    /** When this event was created */
    private java.time.Instant eventTimestamp;

    /** Source service that generated this event */
    private java.lang.String eventSource;

    /** Event schema version */
    private int eventVersion;

    /**
     * Default constructor. Note that this does not initialize fields to their
     * default values from the schema. If that is desired then one should use
     * <code>newBuilder()</code>.
     */
    public OrderCreatedEvent() {
    }

    /**
     * All-args constructor.
     *
     * @param orderId         Unique identifier for the order
     * @param customerId      Customer who placed the order
     * @param customerEmail   Customer email address
     * @param status          Order status (CREATED, CONFIRMED, etc.)
     * @param orderDate       When the order was created
     * @param totalAmount     Total order amount as string
     * @param currency        Currency code (USD, EUR, etc.)
     * @param lineItems       List of order line items
     * @param shippingAddress Shipping address as JSON string
     * @param source          Order source (WEB, MOBILE_APP, etc.)
     * @param channel         Order channel (ONLINE, IN_STORE, etc.)
     * @param eventTimestamp  When this event was created
     * @param eventSource     Source service that generated this event
     * @param eventVersion    Event schema version
     */
    public OrderCreatedEvent(
            java.lang.String orderId,
            java.lang.String customerId,
            java.lang.String customerEmail,
            java.lang.String status,
            java.time.Instant orderDate,
            java.lang.String totalAmount,
            java.lang.String currency,
            java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> lineItems,
            java.lang.String shippingAddress,
            java.lang.String source,
            java.lang.String channel,
            java.time.Instant eventTimestamp,
            java.lang.String eventSource,
            java.lang.Integer eventVersion
    ) {
        this.orderId = orderId;
        this.customerId = customerId;
        this.customerEmail = customerEmail;
        this.status = status;
        this.orderDate = orderDate.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
        this.totalAmount = totalAmount;
        this.currency = currency;
        this.lineItems = lineItems;
        this.shippingAddress = shippingAddress;
        this.source = source;
        this.channel = channel;
        this.eventTimestamp = eventTimestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
        this.eventSource = eventSource;
        this.eventVersion = eventVersion;
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return orderId;
            case 1:
                return customerId;
            case 2:
                return customerEmail;
            case 3:
                return status;
            case 4:
                return orderDate;
            case 5:
                return totalAmount;
            case 6:
                return currency;
            case 7:
                return lineItems;
            case 8:
                return shippingAddress;
            case 9:
                return source;
            case 10:
                return channel;
            case 11:
                return eventTimestamp;
            case 12:
                return eventSource;
            case 13:
                return eventVersion;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    private static final org.apache.avro.Conversion<?>[] conversions = new org.apache.avro.Conversion<?>[] {
            null,
            null,
            null,
            null,
            new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
            null,
            null,
            null,
            null,
            null,
            null,
            new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
            null,
            null,
            null
    };

    @Override
    public org.apache.avro.Conversion<?> getConversion(int field) {
        return conversions[field];
    }

    // Used by DatumReader. Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                orderId = value$ != null ? value$.toString() : null;
                break;
            case 1:
                customerId = value$ != null ? value$.toString() : null;
                break;
            case 2:
                customerEmail = value$ != null ? value$.toString() : null;
                break;
            case 3:
                status = value$ != null ? value$.toString() : null;
                break;
            case 4:
                orderDate = (java.time.Instant) value$;
                break;
            case 5:
                totalAmount = value$ != null ? value$.toString() : null;
                break;
            case 6:
                currency = value$ != null ? value$.toString() : null;
                break;
            case 7:
                lineItems = (java.util.List<dev.notyouraverage.messages.avro.OrderLineItem>) value$;
                break;
            case 8:
                shippingAddress = value$ != null ? value$.toString() : null;
                break;
            case 9:
                source = value$ != null ? value$.toString() : null;
                break;
            case 10:
                channel = value$ != null ? value$.toString() : null;
                break;
            case 11:
                eventTimestamp = (java.time.Instant) value$;
                break;
            case 12:
                eventSource = value$ != null ? value$.toString() : null;
                break;
            case 13:
                eventVersion = (java.lang.Integer) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'orderId' field.
     *
     * @return Unique identifier for the order
     */
    public java.lang.String getOrderId() {
        return orderId;
    }

    /**
     * Sets the value of the 'orderId' field. Unique identifier for the order
     *
     * @param value the value to set.
     */
    public void setOrderId(java.lang.String value) {
        this.orderId = value;
    }

    /**
     * Gets the value of the 'customerId' field.
     *
     * @return Customer who placed the order
     */
    public java.lang.String getCustomerId() {
        return customerId;
    }

    /**
     * Sets the value of the 'customerId' field. Customer who placed the order
     *
     * @param value the value to set.
     */
    public void setCustomerId(java.lang.String value) {
        this.customerId = value;
    }

    /**
     * Gets the value of the 'customerEmail' field.
     *
     * @return Customer email address
     */
    public java.lang.String getCustomerEmail() {
        return customerEmail;
    }

    /**
     * Sets the value of the 'customerEmail' field. Customer email address
     *
     * @param value the value to set.
     */
    public void setCustomerEmail(java.lang.String value) {
        this.customerEmail = value;
    }

    /**
     * Gets the value of the 'status' field.
     *
     * @return Order status (CREATED, CONFIRMED, etc.)
     */
    public java.lang.String getStatus() {
        return status;
    }

    /**
     * Sets the value of the 'status' field. Order status (CREATED, CONFIRMED, etc.)
     *
     * @param value the value to set.
     */
    public void setStatus(java.lang.String value) {
        this.status = value;
    }

    /**
     * Gets the value of the 'orderDate' field.
     *
     * @return When the order was created
     */
    public java.time.Instant getOrderDate() {
        return orderDate;
    }

    /**
     * Sets the value of the 'orderDate' field. When the order was created
     *
     * @param value the value to set.
     */
    public void setOrderDate(java.time.Instant value) {
        this.orderDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    }

    /**
     * Gets the value of the 'totalAmount' field.
     *
     * @return Total order amount as string
     */
    public java.lang.String getTotalAmount() {
        return totalAmount;
    }

    /**
     * Sets the value of the 'totalAmount' field. Total order amount as string
     *
     * @param value the value to set.
     */
    public void setTotalAmount(java.lang.String value) {
        this.totalAmount = value;
    }

    /**
     * Gets the value of the 'currency' field.
     *
     * @return Currency code (USD, EUR, etc.)
     */
    public java.lang.String getCurrency() {
        return currency;
    }

    /**
     * Sets the value of the 'currency' field. Currency code (USD, EUR, etc.)
     *
     * @param value the value to set.
     */
    public void setCurrency(java.lang.String value) {
        this.currency = value;
    }

    /**
     * Gets the value of the 'lineItems' field.
     *
     * @return List of order line items
     */
    public java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> getLineItems() {
        return lineItems;
    }

    /**
     * Sets the value of the 'lineItems' field. List of order line items
     *
     * @param value the value to set.
     */
    public void setLineItems(java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> value) {
        this.lineItems = value;
    }

    /**
     * Gets the value of the 'shippingAddress' field.
     *
     * @return Shipping address as JSON string
     */
    public java.lang.String getShippingAddress() {
        return shippingAddress;
    }

    /**
     * Sets the value of the 'shippingAddress' field. Shipping address as JSON
     * string
     *
     * @param value the value to set.
     */
    public void setShippingAddress(java.lang.String value) {
        this.shippingAddress = value;
    }

    /**
     * Gets the value of the 'source' field.
     *
     * @return Order source (WEB, MOBILE_APP, etc.)
     */
    public java.lang.String getSource() {
        return source;
    }

    /**
     * Sets the value of the 'source' field. Order source (WEB, MOBILE_APP, etc.)
     *
     * @param value the value to set.
     */
    public void setSource(java.lang.String value) {
        this.source = value;
    }

    /**
     * Gets the value of the 'channel' field.
     *
     * @return Order channel (ONLINE, IN_STORE, etc.)
     */
    public java.lang.String getChannel() {
        return channel;
    }

    /**
     * Sets the value of the 'channel' field. Order channel (ONLINE, IN_STORE, etc.)
     *
     * @param value the value to set.
     */
    public void setChannel(java.lang.String value) {
        this.channel = value;
    }

    /**
     * Gets the value of the 'eventTimestamp' field.
     *
     * @return When this event was created
     */
    public java.time.Instant getEventTimestamp() {
        return eventTimestamp;
    }

    /**
     * Sets the value of the 'eventTimestamp' field. When this event was created
     *
     * @param value the value to set.
     */
    public void setEventTimestamp(java.time.Instant value) {
        this.eventTimestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    }

    /**
     * Gets the value of the 'eventSource' field.
     *
     * @return Source service that generated this event
     */
    public java.lang.String getEventSource() {
        return eventSource;
    }

    /**
     * Sets the value of the 'eventSource' field. Source service that generated this
     * event
     *
     * @param value the value to set.
     */
    public void setEventSource(java.lang.String value) {
        this.eventSource = value;
    }

    /**
     * Gets the value of the 'eventVersion' field.
     *
     * @return Event schema version
     */
    public int getEventVersion() {
        return eventVersion;
    }

    /**
     * Sets the value of the 'eventVersion' field. Event schema version
     *
     * @param value the value to set.
     */
    public void setEventVersion(int value) {
        this.eventVersion = value;
    }

    /**
     * Creates a new OrderCreatedEvent RecordBuilder.
     *
     * @return A new OrderCreatedEvent RecordBuilder
     */
    public static dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder newBuilder() {
        return new dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder();
    }

    /**
     * Creates a new OrderCreatedEvent RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new OrderCreatedEvent RecordBuilder
     */
    public static dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder newBuilder(
            dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder other
    ) {
        if (other == null) {
            return new dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder();
        } else {
            return new dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder(other);
        }
    }

    /**
     * Creates a new OrderCreatedEvent RecordBuilder by copying an existing
     * OrderCreatedEvent instance.
     *
     * @param other The existing instance to copy.
     * @return A new OrderCreatedEvent RecordBuilder
     */
    public static dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder newBuilder(
            dev.notyouraverage.messages.avro.OrderCreatedEvent other
    ) {
        if (other == null) {
            return new dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder();
        } else {
            return new dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder(other);
        }
    }

    /**
     * RecordBuilder for OrderCreatedEvent instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderCreatedEvent>
            implements org.apache.avro.data.RecordBuilder<OrderCreatedEvent> {

        /** Unique identifier for the order */
        private java.lang.String orderId;

        /** Customer who placed the order */
        private java.lang.String customerId;

        /** Customer email address */
        private java.lang.String customerEmail;

        /** Order status (CREATED, CONFIRMED, etc.) */
        private java.lang.String status;

        /** When the order was created */
        private java.time.Instant orderDate;

        /** Total order amount as string */
        private java.lang.String totalAmount;

        /** Currency code (USD, EUR, etc.) */
        private java.lang.String currency;

        /** List of order line items */
        private java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> lineItems;

        /** Shipping address as JSON string */
        private java.lang.String shippingAddress;

        /** Order source (WEB, MOBILE_APP, etc.) */
        private java.lang.String source;

        /** Order channel (ONLINE, IN_STORE, etc.) */
        private java.lang.String channel;

        /** When this event was created */
        private java.time.Instant eventTimestamp;

        /** Source service that generated this event */
        private java.lang.String eventSource;

        /** Event schema version */
        private int eventVersion;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.orderId)) {
                this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.customerId)) {
                this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.customerEmail)) {
                this.customerEmail = data().deepCopy(fields()[2].schema(), other.customerEmail);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (isValidValue(fields()[3], other.status)) {
                this.status = data().deepCopy(fields()[3].schema(), other.status);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
            if (isValidValue(fields()[4], other.orderDate)) {
                this.orderDate = data().deepCopy(fields()[4].schema(), other.orderDate);
                fieldSetFlags()[4] = other.fieldSetFlags()[4];
            }
            if (isValidValue(fields()[5], other.totalAmount)) {
                this.totalAmount = data().deepCopy(fields()[5].schema(), other.totalAmount);
                fieldSetFlags()[5] = other.fieldSetFlags()[5];
            }
            if (isValidValue(fields()[6], other.currency)) {
                this.currency = data().deepCopy(fields()[6].schema(), other.currency);
                fieldSetFlags()[6] = other.fieldSetFlags()[6];
            }
            if (isValidValue(fields()[7], other.lineItems)) {
                this.lineItems = data().deepCopy(fields()[7].schema(), other.lineItems);
                fieldSetFlags()[7] = other.fieldSetFlags()[7];
            }
            if (isValidValue(fields()[8], other.shippingAddress)) {
                this.shippingAddress = data().deepCopy(fields()[8].schema(), other.shippingAddress);
                fieldSetFlags()[8] = other.fieldSetFlags()[8];
            }
            if (isValidValue(fields()[9], other.source)) {
                this.source = data().deepCopy(fields()[9].schema(), other.source);
                fieldSetFlags()[9] = other.fieldSetFlags()[9];
            }
            if (isValidValue(fields()[10], other.channel)) {
                this.channel = data().deepCopy(fields()[10].schema(), other.channel);
                fieldSetFlags()[10] = other.fieldSetFlags()[10];
            }
            if (isValidValue(fields()[11], other.eventTimestamp)) {
                this.eventTimestamp = data().deepCopy(fields()[11].schema(), other.eventTimestamp);
                fieldSetFlags()[11] = other.fieldSetFlags()[11];
            }
            if (isValidValue(fields()[12], other.eventSource)) {
                this.eventSource = data().deepCopy(fields()[12].schema(), other.eventSource);
                fieldSetFlags()[12] = other.fieldSetFlags()[12];
            }
            if (isValidValue(fields()[13], other.eventVersion)) {
                this.eventVersion = data().deepCopy(fields()[13].schema(), other.eventVersion);
                fieldSetFlags()[13] = other.fieldSetFlags()[13];
            }
        }

        /**
         * Creates a Builder by copying an existing OrderCreatedEvent instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(dev.notyouraverage.messages.avro.OrderCreatedEvent other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.orderId)) {
                this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.customerId)) {
                this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.customerEmail)) {
                this.customerEmail = data().deepCopy(fields()[2].schema(), other.customerEmail);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.status)) {
                this.status = data().deepCopy(fields()[3].schema(), other.status);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.orderDate)) {
                this.orderDate = data().deepCopy(fields()[4].schema(), other.orderDate);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.totalAmount)) {
                this.totalAmount = data().deepCopy(fields()[5].schema(), other.totalAmount);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.currency)) {
                this.currency = data().deepCopy(fields()[6].schema(), other.currency);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.lineItems)) {
                this.lineItems = data().deepCopy(fields()[7].schema(), other.lineItems);
                fieldSetFlags()[7] = true;
            }
            if (isValidValue(fields()[8], other.shippingAddress)) {
                this.shippingAddress = data().deepCopy(fields()[8].schema(), other.shippingAddress);
                fieldSetFlags()[8] = true;
            }
            if (isValidValue(fields()[9], other.source)) {
                this.source = data().deepCopy(fields()[9].schema(), other.source);
                fieldSetFlags()[9] = true;
            }
            if (isValidValue(fields()[10], other.channel)) {
                this.channel = data().deepCopy(fields()[10].schema(), other.channel);
                fieldSetFlags()[10] = true;
            }
            if (isValidValue(fields()[11], other.eventTimestamp)) {
                this.eventTimestamp = data().deepCopy(fields()[11].schema(), other.eventTimestamp);
                fieldSetFlags()[11] = true;
            }
            if (isValidValue(fields()[12], other.eventSource)) {
                this.eventSource = data().deepCopy(fields()[12].schema(), other.eventSource);
                fieldSetFlags()[12] = true;
            }
            if (isValidValue(fields()[13], other.eventVersion)) {
                this.eventVersion = data().deepCopy(fields()[13].schema(), other.eventVersion);
                fieldSetFlags()[13] = true;
            }
        }

        /**
         * Gets the value of the 'orderId' field. Unique identifier for the order
         *
         * @return The value.
         */
        public java.lang.String getOrderId() {
            return orderId;
        }

        /**
         * Sets the value of the 'orderId' field. Unique identifier for the order
         *
         * @param value The value of 'orderId'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setOrderId(java.lang.String value) {
            validate(fields()[0], value);
            this.orderId = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'orderId' field has been set. Unique identifier for the
         * order
         *
         * @return True if the 'orderId' field has been set, false otherwise.
         */
        public boolean hasOrderId() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'orderId' field. Unique identifier for the order
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearOrderId() {
            orderId = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'customerId' field. Customer who placed the order
         *
         * @return The value.
         */
        public java.lang.String getCustomerId() {
            return customerId;
        }

        /**
         * Sets the value of the 'customerId' field. Customer who placed the order
         *
         * @param value The value of 'customerId'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setCustomerId(java.lang.String value) {
            validate(fields()[1], value);
            this.customerId = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'customerId' field has been set. Customer who placed the
         * order
         *
         * @return True if the 'customerId' field has been set, false otherwise.
         */
        public boolean hasCustomerId() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'customerId' field. Customer who placed the order
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearCustomerId() {
            customerId = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'customerEmail' field. Customer email address
         *
         * @return The value.
         */
        public java.lang.String getCustomerEmail() {
            return customerEmail;
        }

        /**
         * Sets the value of the 'customerEmail' field. Customer email address
         *
         * @param value The value of 'customerEmail'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setCustomerEmail(java.lang.String value) {
            validate(fields()[2], value);
            this.customerEmail = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'customerEmail' field has been set. Customer email address
         *
         * @return True if the 'customerEmail' field has been set, false otherwise.
         */
        public boolean hasCustomerEmail() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'customerEmail' field. Customer email address
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearCustomerEmail() {
            customerEmail = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'status' field. Order status (CREATED, CONFIRMED, etc.)
         *
         * @return The value.
         */
        public java.lang.String getStatus() {
            return status;
        }

        /**
         * Sets the value of the 'status' field. Order status (CREATED, CONFIRMED, etc.)
         *
         * @param value The value of 'status'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setStatus(java.lang.String value) {
            validate(fields()[3], value);
            this.status = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'status' field has been set. Order status (CREATED,
         * CONFIRMED, etc.)
         *
         * @return True if the 'status' field has been set, false otherwise.
         */
        public boolean hasStatus() {
            return fieldSetFlags()[3];
        }

        /**
         * Clears the value of the 'status' field. Order status (CREATED, CONFIRMED,
         * etc.)
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearStatus() {
            status = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'orderDate' field. When the order was created
         *
         * @return The value.
         */
        public java.time.Instant getOrderDate() {
            return orderDate;
        }

        /**
         * Sets the value of the 'orderDate' field. When the order was created
         *
         * @param value The value of 'orderDate'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setOrderDate(java.time.Instant value) {
            validate(fields()[4], value);
            this.orderDate = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'orderDate' field has been set. When the order was created
         *
         * @return True if the 'orderDate' field has been set, false otherwise.
         */
        public boolean hasOrderDate() {
            return fieldSetFlags()[4];
        }

        /**
         * Clears the value of the 'orderDate' field. When the order was created
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearOrderDate() {
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'totalAmount' field. Total order amount as string
         *
         * @return The value.
         */
        public java.lang.String getTotalAmount() {
            return totalAmount;
        }

        /**
         * Sets the value of the 'totalAmount' field. Total order amount as string
         *
         * @param value The value of 'totalAmount'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setTotalAmount(java.lang.String value) {
            validate(fields()[5], value);
            this.totalAmount = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'totalAmount' field has been set. Total order amount as
         * string
         *
         * @return True if the 'totalAmount' field has been set, false otherwise.
         */
        public boolean hasTotalAmount() {
            return fieldSetFlags()[5];
        }

        /**
         * Clears the value of the 'totalAmount' field. Total order amount as string
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearTotalAmount() {
            totalAmount = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'currency' field. Currency code (USD, EUR, etc.)
         *
         * @return The value.
         */
        public java.lang.String getCurrency() {
            return currency;
        }

        /**
         * Sets the value of the 'currency' field. Currency code (USD, EUR, etc.)
         *
         * @param value The value of 'currency'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setCurrency(java.lang.String value) {
            validate(fields()[6], value);
            this.currency = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'currency' field has been set. Currency code (USD, EUR,
         * etc.)
         *
         * @return True if the 'currency' field has been set, false otherwise.
         */
        public boolean hasCurrency() {
            return fieldSetFlags()[6];
        }

        /**
         * Clears the value of the 'currency' field. Currency code (USD, EUR, etc.)
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearCurrency() {
            currency = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        /**
         * Gets the value of the 'lineItems' field. List of order line items
         *
         * @return The value.
         */
        public java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> getLineItems() {
            return lineItems;
        }

        /**
         * Sets the value of the 'lineItems' field. List of order line items
         *
         * @param value The value of 'lineItems'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setLineItems(
                java.util.List<dev.notyouraverage.messages.avro.OrderLineItem> value
        ) {
            validate(fields()[7], value);
            this.lineItems = value;
            fieldSetFlags()[7] = true;
            return this;
        }

        /**
         * Checks whether the 'lineItems' field has been set. List of order line items
         *
         * @return True if the 'lineItems' field has been set, false otherwise.
         */
        public boolean hasLineItems() {
            return fieldSetFlags()[7];
        }

        /**
         * Clears the value of the 'lineItems' field. List of order line items
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearLineItems() {
            lineItems = null;
            fieldSetFlags()[7] = false;
            return this;
        }

        /**
         * Gets the value of the 'shippingAddress' field. Shipping address as JSON
         * string
         *
         * @return The value.
         */
        public java.lang.String getShippingAddress() {
            return shippingAddress;
        }

        /**
         * Sets the value of the 'shippingAddress' field. Shipping address as JSON
         * string
         *
         * @param value The value of 'shippingAddress'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setShippingAddress(java.lang.String value) {
            validate(fields()[8], value);
            this.shippingAddress = value;
            fieldSetFlags()[8] = true;
            return this;
        }

        /**
         * Checks whether the 'shippingAddress' field has been set. Shipping address as
         * JSON string
         *
         * @return True if the 'shippingAddress' field has been set, false otherwise.
         */
        public boolean hasShippingAddress() {
            return fieldSetFlags()[8];
        }

        /**
         * Clears the value of the 'shippingAddress' field. Shipping address as JSON
         * string
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearShippingAddress() {
            shippingAddress = null;
            fieldSetFlags()[8] = false;
            return this;
        }

        /**
         * Gets the value of the 'source' field. Order source (WEB, MOBILE_APP, etc.)
         *
         * @return The value.
         */
        public java.lang.String getSource() {
            return source;
        }

        /**
         * Sets the value of the 'source' field. Order source (WEB, MOBILE_APP, etc.)
         *
         * @param value The value of 'source'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setSource(java.lang.String value) {
            validate(fields()[9], value);
            this.source = value;
            fieldSetFlags()[9] = true;
            return this;
        }

        /**
         * Checks whether the 'source' field has been set. Order source (WEB,
         * MOBILE_APP, etc.)
         *
         * @return True if the 'source' field has been set, false otherwise.
         */
        public boolean hasSource() {
            return fieldSetFlags()[9];
        }

        /**
         * Clears the value of the 'source' field. Order source (WEB, MOBILE_APP, etc.)
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearSource() {
            source = null;
            fieldSetFlags()[9] = false;
            return this;
        }

        /**
         * Gets the value of the 'channel' field. Order channel (ONLINE, IN_STORE, etc.)
         *
         * @return The value.
         */
        public java.lang.String getChannel() {
            return channel;
        }

        /**
         * Sets the value of the 'channel' field. Order channel (ONLINE, IN_STORE, etc.)
         *
         * @param value The value of 'channel'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setChannel(java.lang.String value) {
            validate(fields()[10], value);
            this.channel = value;
            fieldSetFlags()[10] = true;
            return this;
        }

        /**
         * Checks whether the 'channel' field has been set. Order channel (ONLINE,
         * IN_STORE, etc.)
         *
         * @return True if the 'channel' field has been set, false otherwise.
         */
        public boolean hasChannel() {
            return fieldSetFlags()[10];
        }

        /**
         * Clears the value of the 'channel' field. Order channel (ONLINE, IN_STORE,
         * etc.)
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearChannel() {
            channel = null;
            fieldSetFlags()[10] = false;
            return this;
        }

        /**
         * Gets the value of the 'eventTimestamp' field. When this event was created
         *
         * @return The value.
         */
        public java.time.Instant getEventTimestamp() {
            return eventTimestamp;
        }

        /**
         * Sets the value of the 'eventTimestamp' field. When this event was created
         *
         * @param value The value of 'eventTimestamp'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setEventTimestamp(java.time.Instant value) {
            validate(fields()[11], value);
            this.eventTimestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
            fieldSetFlags()[11] = true;
            return this;
        }

        /**
         * Checks whether the 'eventTimestamp' field has been set. When this event was
         * created
         *
         * @return True if the 'eventTimestamp' field has been set, false otherwise.
         */
        public boolean hasEventTimestamp() {
            return fieldSetFlags()[11];
        }

        /**
         * Clears the value of the 'eventTimestamp' field. When this event was created
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearEventTimestamp() {
            fieldSetFlags()[11] = false;
            return this;
        }

        /**
         * Gets the value of the 'eventSource' field. Source service that generated this
         * event
         *
         * @return The value.
         */
        public java.lang.String getEventSource() {
            return eventSource;
        }

        /**
         * Sets the value of the 'eventSource' field. Source service that generated this
         * event
         *
         * @param value The value of 'eventSource'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setEventSource(java.lang.String value) {
            validate(fields()[12], value);
            this.eventSource = value;
            fieldSetFlags()[12] = true;
            return this;
        }

        /**
         * Checks whether the 'eventSource' field has been set. Source service that
         * generated this event
         *
         * @return True if the 'eventSource' field has been set, false otherwise.
         */
        public boolean hasEventSource() {
            return fieldSetFlags()[12];
        }

        /**
         * Clears the value of the 'eventSource' field. Source service that generated
         * this event
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearEventSource() {
            eventSource = null;
            fieldSetFlags()[12] = false;
            return this;
        }

        /**
         * Gets the value of the 'eventVersion' field. Event schema version
         *
         * @return The value.
         */
        public int getEventVersion() {
            return eventVersion;
        }

        /**
         * Sets the value of the 'eventVersion' field. Event schema version
         *
         * @param value The value of 'eventVersion'.
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder setEventVersion(int value) {
            validate(fields()[13], value);
            this.eventVersion = value;
            fieldSetFlags()[13] = true;
            return this;
        }

        /**
         * Checks whether the 'eventVersion' field has been set. Event schema version
         *
         * @return True if the 'eventVersion' field has been set, false otherwise.
         */
        public boolean hasEventVersion() {
            return fieldSetFlags()[13];
        }

        /**
         * Clears the value of the 'eventVersion' field. Event schema version
         *
         * @return This builder.
         */
        public dev.notyouraverage.messages.avro.OrderCreatedEvent.Builder clearEventVersion() {
            fieldSetFlags()[13] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public OrderCreatedEvent build() {
            try {
                OrderCreatedEvent record = new OrderCreatedEvent();
                record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.String) defaultValue(fields()[0]);
                record.customerId = fieldSetFlags()[1] ? this.customerId : (java.lang.String) defaultValue(fields()[1]);
                record.customerEmail = fieldSetFlags()[2] ? this.customerEmail
                        : (java.lang.String) defaultValue(fields()[2]);
                record.status = fieldSetFlags()[3] ? this.status : (java.lang.String) defaultValue(fields()[3]);
                record.orderDate = fieldSetFlags()[4] ? this.orderDate : (java.time.Instant) defaultValue(fields()[4]);
                record.totalAmount = fieldSetFlags()[5] ? this.totalAmount
                        : (java.lang.String) defaultValue(fields()[5]);
                record.currency = fieldSetFlags()[6] ? this.currency : (java.lang.String) defaultValue(fields()[6]);
                record.lineItems = fieldSetFlags()[7] ? this.lineItems
                        : (java.util.List<dev.notyouraverage.messages.avro.OrderLineItem>) defaultValue(fields()[7]);
                record.shippingAddress = fieldSetFlags()[8] ? this.shippingAddress
                        : (java.lang.String) defaultValue(fields()[8]);
                record.source = fieldSetFlags()[9] ? this.source : (java.lang.String) defaultValue(fields()[9]);
                record.channel = fieldSetFlags()[10] ? this.channel : (java.lang.String) defaultValue(fields()[10]);
                record.eventTimestamp = fieldSetFlags()[11] ? this.eventTimestamp
                        : (java.time.Instant) defaultValue(fields()[11]);
                record.eventSource = fieldSetFlags()[12] ? this.eventSource
                        : (java.lang.String) defaultValue(fields()[12]);
                record.eventVersion = fieldSetFlags()[13] ? this.eventVersion
                        : (java.lang.Integer) defaultValue(fields()[13]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<OrderCreatedEvent> WRITER$ = (org.apache.avro.io.DatumWriter<OrderCreatedEvent>) MODEL$
            .createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<OrderCreatedEvent> READER$ = (org.apache.avro.io.DatumReader<OrderCreatedEvent>) MODEL$
            .createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

}
